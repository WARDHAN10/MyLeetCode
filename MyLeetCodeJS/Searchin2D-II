const search2D = (matrix, target) => {
//   console.log(matrix.length);
  const BS2D = BinarySearch2D(matrix, target);
  if (BS2D == -1) {
    return false;
  }
  //   console.log(BS2D);
  const BS = BinarySearch(matrix[BS2D], target);
  if (BS != -1) {
    return true;
  }
  return false;
};

const BinarySearch2D = (arr, k) => {
  let low = 0;
  let high = arr.length - 1;

  while (low <= high) {
    let mid = parseInt((low + high) / 2);
    // console.log(arr[mid]);
    // console.log(low, high, mid);

    if (arr[mid][0] > k) {
      high = mid - 1;
    } else if (k > arr[mid][arr[mid].length - 1]) {
      low = mid + 1;
    } else if (arr[mid][0] <= k && k <= arr[mid][arr[mid].length - 1]) {
      return mid;
    }
  }
  return -1;
};
const BinarySearch = (arr, k) => {
  let low = 0;
  let high = arr.length - 1;

  while (low <= high) {
    let mid = parseInt((low + high) / 2);
    if (arr[mid] == k) {
      return mid;
    } else if (arr[mid] > k) {
      high = mid - 1;
    } else {
      low = mid + 1;
    }
  }
  return -1;
};

// console.log(BinarySearch([1, 2, 3, 4, 5, 6], 6));
console.log(
  search2D(
    [[1,3,5,7],[10,11,16,20],[23,30,34,60]],
    13
  )
);

// console.log(search2D([[-5]], - 5));
